install.packages("kernlab")
install.packages("kernlab)
install.packages("neuralnet")
q()
build.price=c(36,32,31,25,28,36,40,32,41,26,35,35,32,87,33,35)
binom.test(sum(build.price>37),length(build.price),0.5)
spammail=c(310,350,370,377,389,400,415,425,440,295,325,296,250,340,298,
365,375,360,385)
hist(spamail)
hist(spammail)
median(spammail)
wilcox.test(spammail-320)
binom.test(sum(spammail>320),length(spammail),0.5)
a<-c(62,70,74,75,77,80,83,85,88)
a<-c(62,70,74,75,77,80,83,85,88)
walsh<-NULL
for(i in 1:length(a)){
for(j in i:length(a))
walsh<-c(walsh,(a[i]+a[j])/2)
}
NW=length(walsh)
NW
median(walsh)
library(caret)
pnorm(0.5, mean = 0, sd = 1)
dnorm(0.5, mean = 0, sd = 1)
pnorm(0.5, mean = 0, sd = 1)
qnorm(0.5, mean = 0, sd = 1)
x=qnorm(seq(0,1,0.01), mean = 0, sd = 1)
plot(density(x))
x=rnorm(100, mean = 0, sd = 1)
plot(density(x))
line(density(qnorm(seq(0,1,0.01), mean = 0, sd = 1)))
line(qnorm(seq(0,1,0.01), mean = 0, sd = 1),seq(0,1,0.01))
lines(qnorm(seq(0,1,0.01), mean = 0, sd = 1),seq(0,1,0.01))
lines(density(qnorm(seq(0,1,0.01), mean = 0, sd = 1)))
pnorm(x)
dnorm(x)
x=rnorm(100, mean = 0, sd = 1)
plot(density(x))
x<-rnorm(1000,mean=0,sd=1)
y<-dnorm(sort(x))
lines(sort(x),y,col="red")
(140/200-82/200)/(1-82/200)
3*4*4*4*9/12/12/11/11/14
4*2*5*4*5/8/8/7/7/14
0.00708/(0.00708+0.01822)
-(5/14*log2(5/14)+9/14log2(9/14))
-(5/14*log2(5/14)+9/14*log2(9/14))
-(2/4*log2(2/4)+2/4*log2(2/4))
-(2/6*log2(2/6)+4/6*log2(4/6))
-(1/4*log2(1/4)+3/4*log2(3/4))
4/14*1+6/14*0.918+4/14*0.811
88+45+13
77+14+6
72+14+6
(146/200-92/200)/(1-92/200)
4*4*6*3*9/9/9/9/9/14
error_1<-function(f,n,z=0.69){
e=(f+z^2/(2*n)+z*sqrt(f/n-f^2/n+z^2/(4*n^2)))/(1+z^2/n)
e
return(e)
}
error_1(1/3,6)
error_1(1/2,2)
2/16*0.72+14/16*0.46
error_1(6/16,16)
error_1(5/14,14)
error_1(9/14,14)
error_1(2/6,6)
error_1(5/14,14)
error_1(6/16,16)
2/16*0.72+14/16*0.45
error_1(2/7,7)
error_1(1/3,3)
error_1(3/8,8)
7/18*0.41+3/18*0.53+8/18*0.5
error_1(6/18,18)
2/20*0.72+18/20*0.41
error_1(7/20,20)
5*5*7*4*9/12/12/11/14
5*5*7*4*9/12/12/11/14/11
5*5*7*4*9/12/12/11/14/11
1*3*2*4*5/8/8/7/7/14
0.0258/(0.0258+0.0027)
1-0.905
plot(c(1, 9), 1:2, type = "n")
polygon(1:9, c(2,1,2,1,1,2,1,2,1),
col = c("red", "blue"),
border = c("green", "yellow"),
lwd = 3, lty = c("dashed", "solid"))
plot(c(1, 9), 1:2, type = "n")
polygon(1:9, c(2,1,2,1,NA,2,1,2,1),
density = c(10, 20), angle = c(-45, 45))
plot(c(1, 9), 1:2, type = "n")
polygon(1:9, c(2,1,2,1,NA,2,1,2,1),
density = c(10, 20), angle = c(-45, 45),pch='.')
polygon(1:9, c(2,1,2,1,NA,2,1,2,1),
,pch='.')
plot(c(1, 9), 1:2, type = "n")
polygon(1:9, c(2,1,2,1,NA,2,1,2,1),pch='.')
b=seq(0,1,0.001)
c=b^2/4
plot(b,c, ylim=c(0,1),type = "n")
x1=seq(0,5,0.01)
x2=seq(5,10,0.01)
y1=x1*0-1
y2=x2-6
x=c(x1,x2)
y=c(y1,y2)
plot(x,y,
xaxt='n',yaxt='n',
xlab="",ylab="",
bty='n',type='l',
xlim=c(-1,10),ylim=c(-2,7))
arrows(-2,0,10,0)
arrows(0,-2,0,7)
x=c(1:9)
c=c(x,dim(3,3))
c=array(x,dim(3,3))
a=c(1:3)
c=array(x,dim=c(3,3))
c
b=c(2,4,6)
c=c(3,6,9)
rbind(a,b,c)
library(forecast) #boxcox
BoxCox.lambda()
BoxCox.lambda
BoxCox
guerrero
bcloglik
library("prodest")
WRDG.GMM.fit <- prodestWRDG_GMM(chilean$Y, fX = cbind(chilean$fX1, chilean$fX2),
chilean$sX, chilean$pX, chilean$idvar, chilean$timevar)
View(WRDG.GMM.fit)
omega(WRDG.GMM.fit)
prodestWRDG_GMM
LP.fit <- prodestLP(chilean$Y, fX = cbind(chilean$fX1, chilean$fX2), chilean$sX,
chilean$pX, chilean$idvar, chilean$timevar)
omega(LP.fit)
omega
WRDG.GMM.fit@Data$control=rep(1,2544)
omega(WRDG.GMM.fit)
t=omega(LP.fit)
View(t)
chilean
WRDG.GMM.fit <- prodestWRDG_GMM(chilean$Y, fX = cbind(chilean$fX1, chilean$fX2),
chilean$sX, chilean$pX, chilean$idvar, chilean$timevar,chilean$cX)
omega(WRDG.GMM.fit)
sim <- panelSim()
WRDG.GMM.sim1 <- prodestWRDG_GMM(sim$Y, sim$fX, sim$sX, sim$pX1, sim$idvar, sim$timevar)
omega(WRDG.GMM.sim1)
WRDG.GMM.fit <- prodestWRDG_GMM(chilean$Y, fX = cbind(chilean$fX1, chilean$fX2),
chilean$sX, chilean$pX, chilean$idvar, chilean$timevar,chilean$cX)
WRDG.GMM.fit@Data$Y - cbind(WRDG.GMM.fit@Data$free, WRDG.GMM.fit@Data$state, WRDG.GMM.fit@Data$control) %*%
WRDG.GMM.sim2 <- prodestWRDG_GMM(sim$Y, sim$fX, sim$sX, sim$pX2, sim$idvar, sim$timevar)
WRDG.GMM.fit@Data$Y-cbind(WRDG.GMM.fit@Data$free, WRDG.GMM.fit@Data$state, WRDG.GMM.fit@Data$control)
t=chilean
View(t)
prodestWRDG_GMM
t1=checkM(chilean$Y)
library(prodest)
WRDG.GMM.fit <- prodestWRDG_GMM(chilean$Y, fX = cbind(chilean$fX1, chilean$fX2),
chilean$sX, chilean$pX, chilean$idvar, chilean$timevar)
summary(WRDG.GMM.fit)
coef(WRDG.GMM.fit)
ACF.fit <- prodestACF(chilean$Y, fX = cbind(chilean$fX1, chilean$fX2), chilean$sX,
chilean$pX, chilean$idvar, chilean$timevar,
theta0 = c(.5,.5,.5), R = 5)
omega(ACF.fit)
t=omega(ACF.fit)
WRDG.GMM.fit@Data$Y=ACF.fit@Data$Y
t=omega(WRDG.GMM.fit)
omega(WRDG.GMM.fit)
WRDG.GMM.fit
prodestACF
prodestWRDG_GMM
t2=model.frame(dist ~ speed, data = cars)
cars
Y <- checkM(cars$dist)
t55=chilean
View(t55)
WRDG.GMM.fit <- prodestWRDG_GMM(chilean$Y, fX = cbind(chilean$fX1, chilean$fX2),
chilean$sX, chilean$pX, chilean$idvar, chilean$timevar)
prodestWRDG_GMM
Y=chilean$Y
fX=cbind(chilean$fX1, chilean$fX2)
sX=chilean$sX
pX=chilean$pX
idvar=chilean$idvar
timevar=chilean$timevar
cX = NULL
tol = 1e-100
Start = Sys.time()
Y <- checkM(Y)
fX <- checkM(fX)
sX <- checkM(sX)
pX <- checkM(pX)
idvar <- checkM(idvar)
timevar <- checkM(timevar)
snum <- ncol(sX)
fnum <- ncol(fX)
if (!is.null(cX)) {
cX <- checkM(cX)
cnum <- ncol(cX)
}
else {
cnum <- 0
}
lag.fX = fX
for (i in 1:fnum) {
lag.fX[, i] = lagPanel(fX[, i], idvar = idvar, timevar = timevar)
}
polyframe <- data.frame(sX, pX)
regvars <- cbind(model.matrix(~.^2 - 1, data = polyframe),
sX^2, pX^2)
lagregvars <- regvars
for (i in 1:dim(regvars)[2]) {
lagregvars[, i] <- lagPanel(idvar = idvar, timevar = timevar,
regvars[, i])
}
data <- model.frame(Y ~ fX + sX + lag.fX + regvars + lagregvars +
idvar + timevar)
Y <- data$Y
dY = c(data$Y, data$Y)
X1 = cbind(1, data$fX, data$regvars)
X2 = cbind(1, data$fX, data$sX, 1, data$lagregvars)
Z1 = cbind(1, data$fX, data$regvars)
Z2 = cbind(1, data$lag.fX, data$sX, data$lagregvars)
numR = 1 + fnum + snum + cnum
numU1 <- ncol(X1) - numR
numU2 <- ncol(X2) - numR
N <- nrow(X1)
dX <- rbind(cbind(X1, matrix(0, N, numU2)), cbind(X2[, 1:numR],
matrix(0, N, numU1), X2[, (numR + 1):ncol(X2)]))
Z <- as.matrix(bdiag(Z1, Z2))
W <- solve((t(Z) %*% Z)) * diag(ncol(Z))
betas.1st <- solve(t(dX) %*% Z %*% W %*% t(Z) %*% dX, tol = tol) %*%
t(dX) %*% Z %*% W %*% t(Z) %*% dY
W.star <- weightM(Y = Y, X1 = X1, X2 = X2, Z1 = Z1, Z2 = Z2,
betas = betas.1st, numR = (fnum + snum + cnum + 1))
betas.2nd <- solve(t(dX) %*% Z %*% W.star %*% t(Z) %*% dX,
tol = tol) %*% t(dX) %*% Z %*% W.star %*% t(Z) %*% dY
st.errors <- weightM(Y = Y, X1 = X1, X2 = X2, Z1 = Z1, Z2 = Z2,
betas = betas.2nd, numR = (fnum + snum + cnum + 1), SE = TRUE)
res.names <- c(colnames(fX, do.NULL = FALSE, prefix = "fX"),
colnames(sX, do.NULL = FALSE, prefix = "sX"))
if (!is.null(cX)) {
res.names <- c(res.names, colnames(cX, do.NULL = FALSE,
prefix = "cX"))
}
betapar <- betas.2nd[2:(snum + fnum + cnum + 1)]
betase <- st.errors[2:(snum + fnum + cnum + 1)]
names(betapar) <- res.names
names(betase) <- res.names
elapsed.time = Sys.time() - Start
out <- new("prod", Model = list(method = "WRDG.GMM", boot.repetitions = NA,
elapsed.time = elapsed.time, theta0 = NA, opt = NA, opt.outcome = NULL),
Data = list(Y = Y, free = fX, state = sX, proxy = pX,
control = cX, idvar = idvar, timevar = timevar),
Estimates = list(pars = betapar, std.errors = betase))
Y=chilean$Y
fX=cbind(chilean$fX1, chilean$fX2)
sX=chilean$sX
pX=chilean$pX
idvar=chilean$idvar
timevar=chilean$timevar
cX = NULL
tol = 1e-100
Start = Sys.time()
Y <- checkM(Y)
Y=chilean$Y
Y <- checkM(Y)
fX <- checkM(fX)
sX <- checkM(sX)
pX <- checkM(pX)
idvar <- checkM(idvar)
timevar <- checkM(timevar)
snum <- ncol(sX)
fnum <- ncol(fX)
if (!is.null(cX)) {
cX <- checkM(cX)
cnum <- ncol(cX)
}
else {
cnum <- 0
}
lag.fX = fX
for (i in 1:fnum) {
lag.fX[, i] = lagPanel(fX[, i], idvar = idvar, timevar = timevar)
}
if (!is.null(cX)) {
cX <- checkM(cX)
cnum <- ncol(cX)
}
else {
cnum <- 0
}
if (!is.null(cX)) {
cX <- checkM(cX)
cnum <- ncol(cX)
}
else
{
cnum <- 0
}
if (!is.null(cX)) {
cX <- checkM(cX)
cnum <- ncol(cX)
} else
{
cnum <- 0
}
lag.fX = fX
for (i in 1:fnum) {
lag.fX[, i] = lagPanel(fX[, i], idvar = idvar, timevar = timevar)
}
polyframe <- data.frame(sX, pX)
regvars <- cbind(model.matrix(~.^2 - 1, data = polyframe),
sX^2, pX^2)
lagregvars <- regvars
for (i in 1:dim(regvars)[2]) {
lagregvars[, i] <- lagPanel(idvar = idvar, timevar = timevar,
regvars[, i])
}
data <- model.frame(Y ~ fX + sX + lag.fX + regvars + lagregvars +
idvar + timevar)
model.frame
View(lagregvars)
View(lag.fX)
summary(lagregvars)
summary(fx)
summary(lag.fx)
summary(lag.fX)
summary(chilean$fX1, chilean$fX2)
summary(lag.fX)
summary(fX)
fX <- checkM(fX)
lag.fX = fX
summary(fX)
for (i in 1:fnum) {
lag.fX[, i] = lagPanel(fX[, i], idvar = idvar, timevar = timevar)
}
summary(fX)
lag.fX = fX
for (i in 1:fnum) {
lag.fX[, i] = lagPanel(fX[, i], idvar = idvar, timevar = timevar)
}
summary(fX)
fX=cbind(chilean$fX1, chilean$fX2)
fX <- checkM(fX)
fnum <- ncol(fX)
if (!is.null(cX)) {
cX <- checkM(cX)
cnum <- ncol(cX)
} else
{
cnum <- 0
}
lag.fX = fX
for (i in 1:fnum) {
lag.fX[, i] = lagPanel(fX[, i], idvar = idvar, timevar = timevar)
}
polyframe <- data.frame(sX, pX)
regvars <- cbind(model.matrix(~.^2 - 1, data = polyframe),
sX^2, pX^2)
lagregvars <- regvars
for (i in 1:dim(regvars)[2]) {
lagregvars[, i] <- lagPanel(idvar = idvar, timevar = timevar,
regvars[, i])
}
summary(lagregvars)
data <- model.frame(Y ~ fX + sX + lag.fX + regvars + lagregvars +
idvar + timevar)
summary(fX)
summary(lag.fX)
lagPanel
summary(regvars)
y=c(10,15,10,10,12,10,7,7,10,14,8,17,14,18,3,9,11,10,6,12,14,10,25,29,33,33,12,19,16,19,19,12,34,15,36,29,26,21,17,19,13,20,24,12,6,14,6,12,9,11,17,12,8,14,14,12,5,8,10,3,16,8,8,7,12,6,10,8,10,5)
a=ts(y,start = c(1969,1),end = c(1973,9),frequency = 12)
y=c(10,15,10,10,12,10,7,7,10,14,8,17,14,18,3,9,11,10,6,12,14,10,25,29,33,33,12,19,16,19,19,12,34,15,36,29,26,21,17,19,13,20,24,12,6,14,6,12,9,11,17,12,8,14,14,12,5,8,10,3,16,8,8,7,12,6,10,8,10,5)
a=ts(y,start = c(1969,1),end = c(1973,9),frequency = 28)
a
y=c(10,15,10,10,12,10,7,7,10,14,8,17,14,18,3,9,11,10,6,12,14,10,25,29,33,33,12,19,16,19,19,12,34,15,36,29,26,21,17,19,13,20,24,12,6,14,6,12,9,11,17,12,8,14,14,12,5,8,10,3,16,8,8,7,12,6,10,8,10,5)
a=ts(y,start = c(1969,1),end = c(1973,9),frequency = 70)
y=c(10,15,10,10,12,10,7,7,10,14,8,17,14,18,3,9,11,10,6,12,14,10,25,29,33,33,12,19,16,19,19,12,34,15,36,29,26,21,17,19,13,20,24,12,6,14,6,12,9,11,17,12,8,14,14,12,5,8,10,3,16,8,8,7,12,6,10,8,10,5)
a=ts(y,start = c(1969,1),end = c(1973,9),frequency = 13)
y=c(10,15,10,10,12,10,7,7,10,14,8,17,14,18,3,9,11,10,6,12,14,10,25,29,33,33,12,19,16,19,19,12,34,15,36,29,26,21,17,19,13,20,24,12,6,14,6,12,9,11,17,12,8,14,14,12,5,8,10,3,16,8,8,7,12,6,10,8,10,5)
a=ts(y,start = c(1969,1),end = c(1973,9),frequency = 14)
y=c(10,15,10,10,12,10,7,7,10,14,8,17,14,18,3,9,11,10,6,12,14,10,25,29,33,33,12,19,16,19,19,12,34,15,36,29,26,21,17,19,13,20,24,12,6,14,6,12,9,11,17,12,8,14,14,12,5,8,10,3,16,8,8,7,12,6,10,8,10,5)
a=ts(y,start = c(1969,1),end = c(1973,9),frequency = 15)
y=c(10,15,10,10,12,10,7,7,10,14,8,17,14,18,3,9,11,10,6,12,14,10,25,29,33,33,12,19,16,19,19,12,34,15,36,29,26,21,17,19,13,20,24,12,6,14,6,12,9,11,17,12,8,14,14,12,5,8,10,3,16,8,8,7,12,6,10,8,10,5)
a=ts(y,start = c(1969,1),end = c(1973,9),frequency = 15.5)
y=c(10,15,10,10,12,10,7,7,10,14,8,17,14,18,3,9,11,10,6,12,14,10,25,29,33,33,12,19,16,19,19,12,34,15,36,29,26,21,17,19,13,20,24,12,6,14,6,12,9,11,17,12,8,14,14,12,5,8,10,3,16,8,8,7,12,6,10,8,10,5)
a=ts(y,start = c(1969,1),end = c(1973,9),frequency = 15.3)
y=c(10,15,10,10,12,10,7,7,10,14,8,17,14,18,3,9,11,10,6,12,14,10,25,29,33,33,12,19,16,19,19,12,34,15,36,29,26,21,17,19,13,20,24,12,6,14,6,12,9,11,17,12,8,14,14,12,5,8,10,3,16,8,8,7,12,6,10,8,10,5)
a=ts(y,start = c(1969,1),end = c(1973,9),frequency = 15.2)
y=c(10,15,10,10,12,10,7,7,10,14,8,17,14,18,3,9,11,10,6,12,14,10,25,29,33,33,12,19,16,19,19,12,34,15,36,29,26,21,17,19,13,20,24,12,6,14,6,12,9,11,17,12,8,14,14,12,5,8,10,3,16,8,8,7,12,6,10,8,10,5)
a=ts(y,start = c(1969,1),end = c(1973,9),frequency = 15)
y=c(10,15,10,10,12,10,7,7,10,14,8,17,14,18,3,9,11,10,6,12,14,10,25,29,33,33,12,19,16,19,19,12,34,15,36,29,26,21,17,19,13,20,24,12,6,14,6,12,9,11,17,12,8,14,14,12,5,8,10,3,16,8,8,7,12,6,10,8,10,5)
a=ts(y,start = c(1969,1),end = c(1973,10),frequency = 15)
y=c(10,15,10,10,12,10,7,7,10,14,8,17,14,18,3,9,11,10,6,12,14,10,25,29,33,33,12,19,16,19,19,12,34,15,36,29,26,21,17,19,13,20,24,12,6,14,6,12,9,11,17,12,8,14,14,12,5,8,10,3,16,8,8,7,12,6,10,8,10,5)
a=ts(y,start = c(1969,1),end = c(1973,9),frequency = 14)
365/24.7
y=c(10,15,10,10,12,10,7,7,10,14,8,17,14,18,3,9,11,10,6,12,14,10,25,29,33,33,12,19,16,19,19,12,34,15,36,29,26,21,17,19,13,20,24,12,6,14,6,12,9,11,17,12,8,14,14,12,5,8,10,3,16,8,8,7,12,6,10,8,10,5)
a=ts(y,start = c(1969,1),end = c(1973,23),frequency = 15)
y=c(10,15,10,10,12,10,7,7,10,14,8,17,14,18,3,9,11,10,6,12,14,10,25,29,33,33,12,19,16,19,19,12,34,15,36,29,26,21,17,19,13,20,24,12,6,14,6,12,9,11,17,12,8,14,14,12,5,8,10,3,16,8,8,7,12,6,10,8,10,5)
a=ts(y,start = c(1969,1),end = c(1973,12),frequency = 15)
y=c(10,15,10,10,12,10,7,7,10,14,8,17,14,18,3,9,11,10,6,12,14,10,25,29,33,33,12,19,16,19,19,12,34,15,36,29,26,21,17,19,13,20,24,12,6,14,6,12,9,11,17,12,8,14,14,12,5,8,10,3,16,8,8,7,12,6,10,8,10,5)
a=ts(y,start = c(1969,1),end = c(1973,10),frequency = 15)
var(c(1050,1100,1130,1040,1250,1300,1200,1080))
sqrt(var(c(1050,1100,1130,1040,1250,1300,1200,1080)))
0.5+1.3+0.6+1.7+2.2+1.2+0.8+1.5+2+1.6
setwd("C:/Users/Tong/Desktop/ESN/Tensorflow-EchoStateNetwork-master/Tensorflow-EchoStateNetwork-master")
test=read.table("mgdata.dat.txt")
View(test)
write.csv(test,'mgdata')
write.csv(test,'mgdata.csv')
